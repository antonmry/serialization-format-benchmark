// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logs.proto

package com.galiglobal.benchmark.proto.otel.logs.v1;

import com.galiglobal.benchmark.proto.otel.resource.v1.Resource;
import com.galiglobal.benchmark.proto.otel.resource.v1.ResourceOrBuilder;

public interface ResourceLogsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opentelemetry.proto.logs.v1.ResourceLogs)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource for the logs in this message.
   * If this field is not set then resource info is unknown.
   * </pre>
   *
   * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
   * @return Whether the resource field is set.
   */
  boolean hasResource();
  /**
   * <pre>
   * The resource for the logs in this message.
   * If this field is not set then resource info is unknown.
   * </pre>
   *
   * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
   * @return The resource.
   */
  Resource getResource();
  /**
   * <pre>
   * The resource for the logs in this message.
   * If this field is not set then resource info is unknown.
   * </pre>
   *
   * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
   */
  ResourceOrBuilder getResourceOrBuilder();

  /**
   * <pre>
   * A list of ScopeLogs that originate from a resource.
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.logs.v1.ScopeLogs scope_logs = 2;</code>
   */
  java.util.List<ScopeLogs>
      getScopeLogsList();
  /**
   * <pre>
   * A list of ScopeLogs that originate from a resource.
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.logs.v1.ScopeLogs scope_logs = 2;</code>
   */
  ScopeLogs getScopeLogs(int index);
  /**
   * <pre>
   * A list of ScopeLogs that originate from a resource.
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.logs.v1.ScopeLogs scope_logs = 2;</code>
   */
  int getScopeLogsCount();
  /**
   * <pre>
   * A list of ScopeLogs that originate from a resource.
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.logs.v1.ScopeLogs scope_logs = 2;</code>
   */
  java.util.List<? extends ScopeLogsOrBuilder>
      getScopeLogsOrBuilderList();
  /**
   * <pre>
   * A list of ScopeLogs that originate from a resource.
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.logs.v1.ScopeLogs scope_logs = 2;</code>
   */
  ScopeLogsOrBuilder getScopeLogsOrBuilder(
      int index);

  /**
   * <pre>
   * The Schema URL, if known. This is the identifier of the Schema that the resource data
   * is recorded in. Notably, the last part of the URL path is the version number of the
   * schema: http[s]://server[:port]/path/&lt;version&gt;. To learn more about Schema URL see
   * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
   * This schema_url applies to the data in the "resource" field. It does not apply
   * to the data in the "scope_logs" field which have their own schema_url field.
   * </pre>
   *
   * <code>string schema_url = 3;</code>
   * @return The schemaUrl.
   */
  java.lang.String getSchemaUrl();
  /**
   * <pre>
   * The Schema URL, if known. This is the identifier of the Schema that the resource data
   * is recorded in. Notably, the last part of the URL path is the version number of the
   * schema: http[s]://server[:port]/path/&lt;version&gt;. To learn more about Schema URL see
   * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
   * This schema_url applies to the data in the "resource" field. It does not apply
   * to the data in the "scope_logs" field which have their own schema_url field.
   * </pre>
   *
   * <code>string schema_url = 3;</code>
   * @return The bytes for schemaUrl.
   */
  com.google.protobuf.ByteString
      getSchemaUrlBytes();
}
